// Autogenerated Scheme to C++ Code
// File: testCases/test.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object insert_last ( Object ls,  Object v)
{
	if(listp(  ls ) ) {
		if(nullp(  ls ) ) {
			return Object( cons( v,  Object( "( )" ) ) );
		}else{
			return Object( cons( Object( listop( "car",  ls ) ),  Object( insert_last( Object( listop( "cdr",  ls ) ) ,  v ) ) ) );
		}
	}else{
		return  Object( "first_argument_of_insert_last_must_be_a_list" );
	}

}
Object list_reverse ( Object ls)
{
	if(listp(  ls ) ) {
		if(nullp(  ls ) ) {
			return  Object( "( )" );
		}else{
			return Object( insert_last( Object( list_reverse( Object( listop( "cdr",  ls ) ) ) ) ,  Object( listop( "car",  ls ) ) ) );
		}
	}else{
		return  Object( "list_reverse_requires_a_list_argument" );
	}

}
int main ()
{
	cout << Object( list_reverse( Object( "( indentifier numeric literal cons if display newline cddr and or not define number? symbol? list? zero? null? modulo string? + - / * = > < >= <= 'anything 1 1.01 "HelloWorld" )" ) ) );
	cout << endl; 
 	cout << Object( cons( Object( "a" ),  Object( "b" ) ) ); 
 	cout << endl;
}
