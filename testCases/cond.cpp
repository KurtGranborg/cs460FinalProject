// Autogenerated Scheme to C++ Code
// File: testCases/cond.cpp
#include <iostream>
#include "Object.h"
using namespace std;

Object cond_ex_1 (Object p)
{
return ( p  ==   Object(0)  Object("equal")  ):( p  <   Object(0)  Object("negative")  Object("positive")  );

}
Object cond_ex_2 (Object param)
{
return ( param  ==   Object(1)  Object("The_value_is_1")  ):( param  ==   Object(2)  Object("The_value_is_2") param  ==   Object(12)  Object("The_value_is_12")  Object("none_of_the_above")  );

}
Object cond_ex_3 (Object choice, Object value)
{
return ( choice  ==   Object(1) value ):( choice  ==   Object(2) Object(square(value))choice  ==   Object(3) Object(reciprocal(value)) Object(0)  );

}
int main ()
{
cout << return Object(cond_ex_1( Object(5) ));
cout << endl; 
 cout << Object(cond_ex_1( Object(-5) )); 
 cout << endl; 
 cout << Object(cond_ex_1( Object(0) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(1) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(12) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(5) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(2) )); 
 cout << endl; 
 cout << Object(cond_ex_1( Object(-5) )); 
 cout << endl; 
 cout << Object(cond_ex_1( Object(0) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(1) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(12) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(5) )); 
 cout << endl; 
 cout << Object(cond_ex_2( Object(2) )); 
 cout << endl; 
 cout << Object(cond_ex_3( Object(1)    Object(54) )); 
 cout << endl; 
 cout << Object(cond_ex_3( Object(2)    Object(54) )); 
 cout << endl; 
 cout << Object(cond_ex_3( Object(3)    Object(54) )); 
 cout << endl; 
 cout << Object(cond_ex_3( Object(14)    Object(534) )); 
 cout << endl;}
